/*
    You are given an array arr[] of N integers including 0. The task is to find the smallest positive number missing from the array.
    Example 1:
        Input: N = 5 arr[] = {1,2,3,4,5}
        Output: 6
        Explanation: Smallest positive missing number is 6.
    Example 2:
        Input: N = 5 arr[] = {0,-10,1,3,-20}
        Output: 2
        Explanation: Smallest positive missing number is 2.
    Your Task:
    The task is to complete the function missingNumber() which returns the smallest positive missing number in the array.

    Expected Time Complexity: O(N).
    Expected Auxiliary Space: O(1).

    Constraints:
    1 <= N <= 106
    -106 <= arr[i] <= 106
*/

/*
    For only positive numbers it is so easy just use index to store its presence but in case of negative numbers it becomes a little tricky.
    So what we have to do is shift all negative numbers in left side and positive on right and keep index of 1st positive integer this can be done in O(n) as we dont
    need to sort them just swap them. and after that treat the right half as you would treat your only positive array
*/
// Code
 int segregate(int arr[], int size){
    int j = 0, i;
    for (i = 0; i < size; i++) {
        if (arr[i] <= 0) {
            swap(&arr[i], &arr[j]);
            // increment count of non-positive integers
            j++;
        }
    }
    return j;
}
 
// Find the smallest positive missing number in an array that contains all positive integers 
int findMissingPositive(int arr[], int size){
    int i;
    // Mark arr[i] as visited by making arr[arr[i] - 1] negative. Note that 1 is subtracted because index start from 0 and positive numbers start from 1
    for (i = 0; i < size; i++) {
        if (abs(arr[i]) - 1 < size && arr[abs(arr[i]) - 1] > 0)
            arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1];
    }
 
    // Return the first index value at which is positive
    for (i = 0; i < size; i++)
        if (arr[i] > 0)
            // 1 is added because indexes start from 0
            return i + 1;
 
    return size + 1;
}
 
// Find the smallest positive missing number in an array that contains both positive and negative integers 
int findMissing(int arr[], int size){
     
    // First separate positive and negative numbers
    int shift = segregate(arr, size);
    // Shift the array and call findMissingPositive for positive part
    return findMissingPositive(arr + shift,size - shift);
}
 
